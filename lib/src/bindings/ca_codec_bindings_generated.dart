// ignore_for_file: always_specify_types
// ignore_for_file: camel_case_types
// ignore_for_file: non_constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// Bindings for `src/coast_audio_native_codec.h`.
///
/// Regenerate bindings with `flutter pub run ffigen --config ffigen.yaml`.
///
class CaCodecBindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  CaCodecBindings(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  CaCodecBindings.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  ca_decoder_config ca_decoder_config_init() {
    return _ca_decoder_config_init();
  }

  late final _ca_decoder_config_initPtr =
      _lookup<ffi.NativeFunction<ca_decoder_config Function()>>(
          'ca_decoder_config_init');
  late final _ca_decoder_config_init =
      _ca_decoder_config_initPtr.asFunction<ca_decoder_config Function()>();

  int ca_decoder_init(
    ffi.Pointer<ca_decoder> pDecoder,
    ca_decoder_config config,
    ca_decoder_read_proc pReadProc,
    ca_decoder_seek_proc pSeekProc,
    ca_decoder_tell_proc pTellProc,
    ca_decoder_decoded_proc pDecodedProc,
    ffi.Pointer<ffi.Void> pUserData,
  ) {
    return _ca_decoder_init(
      pDecoder,
      config,
      pReadProc,
      pSeekProc,
      pTellProc,
      pDecodedProc,
      pUserData,
    );
  }

  late final _ca_decoder_initPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int32 Function(
              ffi.Pointer<ca_decoder>,
              ca_decoder_config,
              ca_decoder_read_proc,
              ca_decoder_seek_proc,
              ca_decoder_tell_proc,
              ca_decoder_decoded_proc,
              ffi.Pointer<ffi.Void>)>>('ca_decoder_init');
  late final _ca_decoder_init = _ca_decoder_initPtr.asFunction<
      int Function(
          ffi.Pointer<ca_decoder>,
          ca_decoder_config,
          ca_decoder_read_proc,
          ca_decoder_seek_proc,
          ca_decoder_tell_proc,
          ca_decoder_decoded_proc,
          ffi.Pointer<ffi.Void>)>();

  int ca_decoder_decode_next(
    ffi.Pointer<ca_decoder> pDecoder,
  ) {
    return _ca_decoder_decode_next(
      pDecoder,
    );
  }

  late final _ca_decoder_decode_nextPtr =
      _lookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ca_decoder>)>>(
          'ca_decoder_decode_next');
  late final _ca_decoder_decode_next = _ca_decoder_decode_nextPtr
      .asFunction<int Function(ffi.Pointer<ca_decoder>)>();

  int ca_decoder_seek(
    ffi.Pointer<ca_decoder> pDecoder,
    int frameIndex,
  ) {
    return _ca_decoder_seek(
      pDecoder,
      frameIndex,
    );
  }

  late final _ca_decoder_seekPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int32 Function(
              ffi.Pointer<ca_decoder>, ca_uint64)>>('ca_decoder_seek');
  late final _ca_decoder_seek = _ca_decoder_seekPtr
      .asFunction<int Function(ffi.Pointer<ca_decoder>, int)>();

  int ca_decoder_get_eof(
    ffi.Pointer<ca_decoder> pDecoder,
    ffi.Pointer<ca_bool> pIsEOF,
  ) {
    return _ca_decoder_get_eof(
      pDecoder,
      pIsEOF,
    );
  }

  late final _ca_decoder_get_eofPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int32 Function(ffi.Pointer<ca_decoder>,
              ffi.Pointer<ca_bool>)>>('ca_decoder_get_eof');
  late final _ca_decoder_get_eof = _ca_decoder_get_eofPtr.asFunction<
      int Function(ffi.Pointer<ca_decoder>, ffi.Pointer<ca_bool>)>();

  int ca_decoder_get_format(
    ffi.Pointer<ca_decoder> pDecoder,
    ffi.Pointer<ca_audio_format> pFormat,
  ) {
    return _ca_decoder_get_format(
      pDecoder,
      pFormat,
    );
  }

  late final _ca_decoder_get_formatPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int32 Function(ffi.Pointer<ca_decoder>,
              ffi.Pointer<ca_audio_format>)>>('ca_decoder_get_format');
  late final _ca_decoder_get_format = _ca_decoder_get_formatPtr.asFunction<
      int Function(ffi.Pointer<ca_decoder>, ffi.Pointer<ca_audio_format>)>();

  int ca_decoder_uninit(
    ffi.Pointer<ca_decoder> pDecoder,
  ) {
    return _ca_decoder_uninit(
      pDecoder,
    );
  }

  late final _ca_decoder_uninitPtr =
      _lookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<ca_decoder>)>>(
          'ca_decoder_uninit');
  late final _ca_decoder_uninit =
      _ca_decoder_uninitPtr.asFunction<int Function(ffi.Pointer<ca_decoder>)>();
}

abstract class ca_result {
  static const int ca_result_success = 0;
  static const int ca_result_invalid_args = -1;
  static const int ca_result_seek_failed = -2;
  static const int ca_result_read_failed = -3;
  static const int ca_result_tell_failed = -4;
  static const int ca_result_not_initialized = -5;
  static const int ca_result_unsupported_format = -6;
  static const int ca_result_unknown_failed = -1000;
}

abstract class ca_read_result {
  static const int ca_read_result_success = 0;
  static const int ca_read_result_at_end = -1;
  static const int ca_read_result_failed = -2;
}

abstract class ca_seek_result {
  static const int ca_seek_result_success = 0;
  static const int ca_seek_result_unsupported = -1;
  static const int ca_seek_result_failed = -2;
}

abstract class ca_tell_result {
  static const int ca_tell_result_success = 0;
  static const int ca_tell_result_unknown_length = -1;
  static const int ca_tell_result_failed = -2;
}

abstract class ca_sample_format {
  static const int ca_sample_format_unknown = 0;
  static const int ca_sample_format_u8 = 1;
  static const int ca_sample_format_s16 = 2;
  static const int ca_sample_format_s24 = 3;
  static const int ca_sample_format_s32 = 4;
  static const int ca_sample_format_f32 = 5;
}

final class ca_audio_format extends ffi.Struct {
  @ca_uint32()
  external int channels;

  @ca_uint32()
  external int sample_rate;

  @ffi.Int32()
  external int sample_foramt;

  @ca_uint64()
  external int length;

  external UnnamedStruct1 apple;
}

typedef ca_uint32 = ffi.UnsignedInt;
typedef ca_uint64 = ffi.UnsignedLongLong;

final class UnnamedStruct1 extends ffi.Struct {
  @ffi.Int()
  external int format_id;
}

abstract class ca_seek_origin {
  static const int ca_seek_origin_start = 0;
  static const int ca_seek_origin_current = 1;
}

final class ca_decoder_config extends ffi.Struct {
  @ffi.Int()
  external int appleFileTypeHint;
}

final class ca_decoder extends ffi.Struct {
  external ffi.Pointer<ffi.Void> pDecoder;

  external ffi.Pointer<ffi.Void> pUserData;
}

typedef ca_decoder_read_proc = ffi.Pointer<
    ffi.NativeFunction<
        ffi.Int32 Function(
            ffi.Pointer<ffi.Void> pBufferIn,
            ca_uint32 bytesToRead,
            ffi.Pointer<ca_uint32> pBytesRead,
            ffi.Pointer<ffi.Void> pUserData)>>;
typedef ca_decoder_seek_proc = ffi.Pointer<
    ffi.NativeFunction<
        ffi.Int32 Function(ca_int64 byteOffset, ffi.Int32 origin,
            ffi.Pointer<ffi.Void> pUserData)>>;
typedef ca_int64 = ffi.LongLong;
typedef ca_decoder_tell_proc = ffi.Pointer<
    ffi.NativeFunction<
        ffi.Int32 Function(ffi.Pointer<ca_uint64> pPosition,
            ffi.Pointer<ca_uint64> pLength, ffi.Pointer<ffi.Void> pUserData)>>;
typedef ca_decoder_decoded_proc = ffi.Pointer<
    ffi.NativeFunction<
        ffi.Void Function(ca_uint32 frameCount, ffi.Pointer<ffi.Void> pBuffer,
            ffi.Pointer<ffi.Void> pUserData)>>;
typedef ca_bool = ffi.Int;

const int CA_TRUE = 1;

const int CA_FALSE = 0;
